<?xml version="1.0" encoding="UTF-8"?>
<project
        xmlns="http://maven.apache.org/POM/4.0.0"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>gov.sandia.avteam.maven</groupId>
        <artifactId>maven-plugin-parent</artifactId>
        <version>2-SNAPSHOT</version>
    </parent>

    <groupId>gov.sandia.avteam.maven</groupId>
    <artifactId>build-utils-maven-plugin</artifactId>
    <version>2.0.0-SNAPSHOT</version>
   
    <packaging>maven-plugin</packaging>

    <name>Build Utils Avondale Custom Maven Plug-in</name>
    <description>
        This project contains a custom Maven plug-in to house additional 
        functionality for the Avondale build pipeline.  This additional 
        functionality will help us 1) to more easily manage licenses, 
        2) to more comprehesively understand our dependency landscape, and 
        3) to automatically scan or manipulate our projects' source code.
    </description>
    
    <organization>
        <name>Sandia National Labs</name>
        <url>http://sandia.gov</url>
    </organization>
    
    <dependencies>

        <!-- https://mvnrepository.com/artifact/org.xerial/sqlite-jdbc -->
        <dependency>
            <groupId>org.xerial</groupId>
            <artifactId>sqlite-jdbc</artifactId>
            <version>3.36.0.1</version>
        </dependency>

        <!-- Avondale Team Project Dependencies (Special Case) -->
        <!-- The BuildUtils project is a Maven plug-in and is used to
             build all other projects.  However, since BuildUtils is
             itself a Java project, I want to use Replete to leverage
             our standard convenience and utility classes.  If these
             projects are built at the same time, then there's an 
             obvious circular dependency and Maven cannot and will not
             attempt to build a set of projects that contain a circular
             dependency.  The solution is to never build the two 
             projects from source on the same Maven build command. 
             
             Ultimately, the cycle must be broken by having one of the
             projects dependent on an already built, known, official 
             version of the other and that version should always be
             available via some repository without having to build it.

             To achieve this, I'm going to commit a recent build of
             Replete.  It was a 1.1.0-SNAPSHOT build when Avondale
             3.6.0 was being finalized, but to not confuse any Maven
             repos on developer or Jenkins machines, I have changed
             its version to 1.0.999.  I'm also checking the JAR into
             the BuildUtils project so that the code doesn't have to
             exist in any other repos to work.
             
             None of this is the ideal way to handle this.  But we
             haven't put in enough work into our build system and
             CI/CD solution to do it in a more appropriate fashion.
             We are still heavily leveraging the -SNAPSHOT mechanic,
             too much so I'm sure.
             
             Replete doesn't change that much so BuiltUtils isn't
             going to be requiring regular updates to this JAR.
             -->
        <!-- dependency>
            <groupId>gov.sandia.avteam.replete</groupId>
            <artifactId>replete</artifactId>
            <version>2.0.0-SNAPSHOT</version>
        </dependency -->
        <dependency>
            <groupId>gov.sandia.avteam.replete</groupId>
            <artifactId>replete</artifactId>
            <version>1.0.999</version>
        </dependency>
    
    </dependencies>
    
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-plugin-plugin</artifactId>
                <configuration>
                    <goalPrefix>bu</goalPrefix>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-install-plugin</artifactId>
                <executions>
                    <execution>
                        <id>install-replete-snapshot-to-local-repo</id>
                        <goals>
                            <goal>install-file</goal>
                        </goals>
                        <phase>validate</phase>
                        <configuration>
                            <groupId>gov.sandia.avteam.replete</groupId>
                            <artifactId>replete</artifactId>
                            <version>1.0.999</version>
                            <packaging>jar</packaging>
                            <file>${project.basedir}/../BuildUtils/lib/replete-1.0.999.jar</file>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>
