/* Generated By:JJTree: Do not edit this line. ASTOpNode.java Version 4.3 */
/*
 * JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=true,TRACK_TOKENS=false,NODE_PREFIX=AST,
 * NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true
 */

package replete.scripting.rscript.parser.gen;

import replete.scripting.rscript.evaluation.functions.AssignmentFunction;
import replete.scripting.rscript.evaluation.functions.Function;
import replete.scripting.rscript.evaluation.functions.FunctionList;
import replete.scripting.rscript.parser.values.OperatorValue;

public class ASTOperator extends ASTNode<OperatorValue> {


    ////////////////////
    // AUTO-GENERATED //
    ////////////////////

    public ASTOperator(OperatorValue value) {
        super(value, RScriptParserGeneratedTreeConstants.JJTOPERATOR);
    }

    public ASTOperator(int id) {
        super(id);
    }

    public ASTOperator(RScriptParserGenerated p, int id) {
        super(p, id);
    }

    /** Accept the visitor. **/
    @Override
    public Object jjtAccept(RScriptParserGeneratedVisitor visitor, Object data) throws ParseException {
        return visitor.visit(this, data);
    }


    ////////////
    // CUSTOM //
    ////////////

    public Function getFunction() {
        OperatorValue value = getValue();
        return FunctionList.getOrUnknown(value.getImage());
    }

    @Override
    public boolean isSimpleAssignment() {
        Function func = getFunction();
        if(func.getClass().equals(AssignmentFunction.class)) {
            if(getChild(0) instanceof ASTVariable) {
                return true;
            }
        }
        return false;
    }

    @Override
    public boolean isAssignment() {
        Function func = getFunction();
        return func.isAssignment();
    }
}
/* JavaCC - OriginalChecksum=fdb37a0358564ff530164781a4b1ce67 (do not edit this line) */
